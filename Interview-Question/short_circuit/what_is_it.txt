
Yes, short-circuit evaluation also works in Python! Logical operators and and or in Python behave 
similarly to && and || in C, and they can short-circuit based on the first operand's value.

----------------------------------How Short-Circuiting Works in Python
--> and (Logical AND):
If the first operand is False, the second operand is not evaluated because the result will always be False.

--> or (Logical OR):
If the first operand is True, the second operand is not evaluated because the result will always be True.


Q) 
x = 0
y = 10

if x != 0 and y / x > 1:  # Short-circuit occurs here
    print("Condition met")
else:
    print("Condition not met")



sol->
Explanation:

x != 0 is False because x = 0.
Since the first operand of and is False, Python skips the second part (y / x > 1) and avoids a ZeroDivisionError.
Output: Condition not met.